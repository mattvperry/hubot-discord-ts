"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("discord.js"),t=require("hubot");class s extends t.Adapter{constructor(s,r){super(s),this.token=r,this.run=async()=>{this.client=new e.Client({fetchAllMembers:!0,presence:{status:"online"},ws:{compress:!0}}),this.client.on("ready",this.ready),this.client.on("message",this.message),this.client.on("error",this.error),this.client.on("debug",this.robot.logger.debug.bind(this.robot.logger)),await this.client.login(this.token)},this.close=()=>this.client.destroy(),this.send=async(t,...s)=>{if(!t.room)return;const r=await this.client.channels.fetch(t.room);if(r instanceof e.TextChannel&&this.hasPermission(r,t.user.id))for(const e of s)await this.sendMessage(r,e);else this.robot.logger.error("ERROR! Message not sent. Invalid channel.")},this.reply=(e,...t)=>{const[s,...r]=t;return this.send(e,`<@${e.user.id}> ${s}`,...r)},this.ready=()=>{if(null===this.client.user)throw new Error("Discord user is null after logging in");this.robot.logger.info(`Logged in: ${this.client.user.username}#${this.client.user.discriminator}`),this.robot.name=this.client.user.username,this.robot.logger.info(`Robot Name: ${this.robot.name}`),this.emit("connected")},this.sendMessage=async(e,t)=>{try{await e.send("â€‹"+t,{split:!0}),this.robot.logger.debug(`SUCCESS! Message sent to: ${e.id}`)}catch(e){this.robot.logger.error(`ERROR! Message not sent: ${t}\r\n${e}`)}},this.message=e=>{var s;if(e.author.id===(null===(s=this.client.user)||void 0===s?void 0:s.id))return;const r=this.mapUser(e.author,e.channel.id),i=this.formatIncomingMsg(e);this.robot.logger.debug(i),this.robot.receive(new t.TextMessage(r,i,e.id))},this.error=async e=>{this.robot.logger.error(`Discord client encounted an error:\r\n${e}`),this.client.destroy(),await this.client.login(this.token)},this.hasPermission=(e,t)=>{var s;return null===(s=e.permissionsFor(t))||void 0===s?void 0:s.has("SEND_MESSAGES")},this.mapUser=(e,t)=>{const s=this.robot.brain.userForId(e.id);return s.room=t,s.name=e.username,s.id=e.id,s.discriminator=e.discriminator,s},this.formatIncomingMsg=e=>{let t=e.cleanContent;return"dm"!==e.channel.type||t.startsWith(this.robot.name)||(t=`${this.robot.name} ${t}`),t}}}exports.DiscordAdapter=s,exports.hasDiscordAdapter=function(e){return"discord-ts"===e.adapterName},exports.use=function(e){if(!process.env.HUBOT_DISCORD_TOKEN)throw new Error("Environment variable named `HUBOT_DISCORD_TOKEN` required.");return new s(e,process.env.HUBOT_DISCORD_TOKEN)};
//# sourceMappingURL=index.js.map
